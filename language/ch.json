{
    "__lang_name__": "简体中文",
    "banner_subtitle": "         🚀 Termz 终端 - Muhammad Zili 作品",
    "prompt_prefix": "Termz",
    "welcome_message": "欢迎来到 Termz v1.1！输入 'help' 查看命令列表。",
    "running_on": "运行于",
    "announcement_title": "功能公告",
    "announcement_body": "Termz 现已支持多语言！ 试试 'trm set language'",
    "help_title": "可用命令:",
    "help_nav_file": "--- 导航和文件 ---",
    "help_ls": "列出目录内容",
    "help_cd": "切换目录 (支持 '..' 返回上一级)",
    "help_mkdir": "创建新目录",
    "help_rm": "删除文件",
    "help_rm_rf": "强制删除文件夹或文件",
    "help_tre": "编辑文件 (使用主机的 'nano')",
    "help_git_clone": "从 GitHub 克隆仓库",
    "help_pkg_mgmt": "--- 软件包管理 ---",
    "help_trm_change_repo": "更改软件包仓库 URL (交互式)",
    "help_trm_set_lang": "更改显示语言 (新功能!)",
    "help_pkg_install": "从仓库安装软件包",
    "help_pkg_remove": "移除已安装的软件包",
    "help_pkg_update": "从仓库更新软件包列表",
    "help_pkg_upgrade": "升级所有已安装的软件包",
    "help_trm_installed": "显示已安装的软件包",
    "help_trm_search": "在仓库中搜索软件包",
    "help_trm_run": "运行已安装软件包中的命令",
    "help_other": "--- 其他 ---",
    "help_clear": "清空屏幕",
    "help_exit": "退出 Termz",
    "help_footer": "您也可以直接运行已安装的软件包\n通过输入: <package_name> [subcommand]",
    "access_denied": "❌ 错误：访问被拒绝。",
    "error_ls": "❌ 错误 ls",
    "dir_not_found": "❌ 错误：目录 '{target_dir}' 未找到。",
    "cannot_go_up": "已在沙盒根目录，无法再上一级。",
    "error_cd": "❌ 错误 cd",
    "dir_created": "✅ 目录 '{target_dir}' 已创建。",
    "error_mkdir": "❌ 错误 mkdir",
    "cannot_delete_root": "❌ 错误：无法删除 home 根目录。",
    "dir_deleted": "🗑️  目录 '{target}' 已删除。",
    "file_deleted": "🗑️  文件 '{target}' 已删除。",
    "not_found": "❌ 错误：'{target}' 未找到。",
    "error_rm_rf": "❌ 错误 rm -rf",
    "is_dir_use_rf": "❌ 错误：'{target}' 是一个目录。请使用 'rm -rf' 来删除。",
    "file_not_found": "❌ 错误：文件 '{target}' 未找到。",
    "error_rm": "❌ 错误 rm",
    "nano_opening": "正在使用 nano 打开 {filename}...",
    "nano_closed": "Nano 已关闭。",
    "nano_not_found": "❌ 错误：主机系统中未安装 'nano'。",
    "nano_required": "'tre' 需要 'nano' 才能运行。",
    "nano_error": "❌ 运行 nano 时出错",
    "usage_git_clone": "用法: git clone <repo_url> [optional_dir]",
    "cloning": "正在克隆 '{repo_url}' 到 '{target_dir}'...",
    "clone_success": "✅ 克隆完成。",
    "git_not_found": "❌ 错误：主机系统中未安装 'git'。",
    "error_git_clone": "❌ 错误 git clone",
    "repo_change_title": "--- 更改仓库 ---",
    "current_repo": "当前仓库",
    "repo_select_new": "选择新仓库:",
    "repo_default": "默认仓库 (GitHub)",
    "repo_mirror": "镜像仓库 (tinkrow.space)",
    "repo_custom": "自定义 (输入 URL)",
    "repo_cancel": "取消",
    "repo_choice": "选择 [0-3]: ",
    "repo_custom_url": "输入自定义仓库 URL: ",
    "repo_url_empty": "URL 为空，已取消。",
    "repo_cancelled": "更改仓库已取消。",
    "repo_cmd_deprecated": "命令 'trm repo <url>' 已弃用。",
    "repo_cmd_use_interactive": "请使用 'trm change repo' 进入交互式菜单。",
    "lang_change_title": "--- 更改语言 ---",
    "lang_select_new": "选择新语言:",
    "lang_choice": "选择 [0-{count}]: ",
    "lang_set_success": "✅ 语言已更改为 {lang_name}",
    "lang_set_fail": "❌ 更改语言失败。文件 '{lang_code}.json' 未找到。",
    "lang_cancelled": "更改语言已取消。",
    "usage_pkg_install": "用法: pkg install <package_name>",
    "usage_pkg_remove": "用法: pkg remove <package_name>",
    "usage_trm_search": "用法: trm search <keyword>",
    "usage_trm_run": "用法: trm run <command> [subcommand]",
    "goodbye": "再见 👋",
    "unknown_command": "未知命令。输入 'help' 获取帮助。",
    "interrupted": "已中断。输入 'exit' 退出。",
    "generic_error": "错误",
    "pkg_creating_default_config": "正在创建默认 config.json...",
    "pkg_config_corrupt": "⚠️ 警告：config.json 文件损坏。正在重置为默认值。",
    "pkg_config_save_error": "❌ 保存 config.json 时出错: {e}",
    "pkg_repo_reset": "✅ 仓库已重置为默认值:\n   {url}",
    "pkg_repo_changed": "✅ 仓库 URL 已更改为:\n   {url}",
    "pkg_run_update": "   请运行 'pkg update' 来同步软件包列表。",
    "pkg_installed_corrupt": "⚠️ 警告：installed.json 文件损坏。正在创建新文件。",
    "pkg_cache_corrupt": "⚠️ 警告：repo_cache.json 文件损坏。正在创建新文件。",
    "pkg_updating": "🔄 正在从 {url} 更新软件包列表...",
    "pkg_mode_github": "   (模式: GitHub API)",
    "pkg_github_api_error": "GitHub API 返回 HTTP {code}",
    "pkg_mode_mirror": "   (模式: 简单镜像)",
    "pkg_fetching_index": "   正在获取索引: {url}",
    "pkg_mirror_api_error": "简单镜像返回 HTTP {code} (index.json)",
    "pkg_mirror_not_dict": "简单镜像的 index.json 不是一个 JSON 对象 (字典)。",
    "pkg_update_success": "✅ 仓库已更新。{count} 个软件包可用。",
    "pkg_update_error": "❌ 从 {url} 更新仓库时出错: {e}",
    "pkg_fallback_default": "⚠️ 正在尝试回退到默认仓库...",
    "pkg_fallback_success": "✅ 默认仓库加载成功。{count} 个软件包可用。",
    "pkg_fallback_fail": "❌ 从默认仓库获取失败 (HTTP {code})。",
    "pkg_fallback_fatal": "❌ 严重错误：默认仓库也失败了: {e}",
    "pkg_command_parse_info_1": "   (信息: 检测到 '**default**', 转换为 '__default__')",
    "pkg_command_parse_info_2": "   (信息: 检测到 'default', 转换为 '__default__')",
    "pkg_fetch_mode_github": "   (获取模式: GitHub API)",
    "pkg_fetch_http_error": "获取软件包数据失败 (HTTP {code})。",
    "pkg_fetch_not_base64": "错误：文件编码不是 base64。",
    "pkg_fetch_applying_fix": "   (正在为 GitHub 内容应用反斜杠修复...)",
    "pkg_fetch_mode_mirror": "   (获取模式: 简单镜像)",
    "pkg_fetch_parse_error": "解析软件包数据时出错: {e}",
    "pkg_fetch_process_error": "处理软件包数据时出错: {e}",
    "pkg_not_in_cache": "⚠️ 软件包 '{name}' 在缓存中未找到。请先尝试 'pkg update'。",
    "pkg_getting_info": "正在获取软件包 '{name}' 的信息...",
    "pkg_detail_title": "--- 软件包详情 ---",
    "pkg_detail_name": "名称    : {name}",
    "pkg_detail_version": "版本    : {version}",
    "pkg_detail_author": "作者    : {author}",
    "pkg_detail_desc": "描述    : {desc}",
    "pkg_detail_footer": "--------------------",
    "pkg_confirm_install": "继续安装吗? [Y/n] ",
    "pkg_install_cancelled": "安装已取消。",
    "pkg_installing": "正在安装 '{name}'",
    "pkg_install_success": "✅ 成功安装 '{name}' v{version}！",
    "pkg_not_installed": "❌ 软件包 '{name}' 未在已安装列表中找到。",
    "pkg_confirm_remove": "您确定要移除 '{name}' 吗?\n继续? [Y/n] ",
    "pkg_remove_cancelled": "移除已取消。",
    "pkg_remove_success": "🗑️ 软件包 '{name}' 已移除。",
    "pkg_list_empty": "尚未安装任何软件包。",
    "pkg_list_title": "已安装的软件包:",
    "pkg_list_item": " - {name} v{version} | 命令: {commands}",
    "pkg_upgrade_checking": "⬆️ 正在检查软件包更新...",
    "pkg_upgrade_fail_update": "⚠️ 仓库更新失败，升级过程已取消。",
    "pkg_upgrade_empty": "没有已安装的软件包可升级。",
    "pkg_upgrade_check_installed": "--- 正在检查已安装的软件包 ---",
    "pkg_upgrade_not_in_repo": "⚠️ '{name}' 已不在仓库中。正在跳过。",
    "pkg_upgrade_error_process": "❌ 处理软件包 '{name}' 时出错。正在跳过。",
    "pkg_upgrade_no_version": "⚠️ 仓库中的软件包 '{name}' 没有版本号。正在跳过。",
    "pkg_upgrading_from": "📦 正在升级 '{name}' 从 {current_ver} → {new_ver}",
    "pkg_up_to_date": "✅ '{name}' (v{current_ver}) 已经是最新版本。 (仓库版本: {new_ver})",
    "pkg_upgrade_error_skip": "❌ 处理 '{name}' 时出错: {e}。正在跳过。",
    "pkg_upgrade_complete": "🎉 升级完成！",
    "pkg_upgrade_summary": "已升级: {upgraded_count}, 已是最新: {uptodate_count}",
    "pkg_search_empty_cache": "仓库缓存为空。请先运行 'pkg update'。",
    "pkg_searching": "正在仓库中搜索 '{keyword}'...",
    "pkg_search_item": " - {name}",
    "pkg_search_not_found": "未找到软件包。",
    "cmd_usage": "用法: trm run <command> [subcommand]",
    "cmd_cache_empty": "⚠️ 内部缓存为空，正在从磁盘重新加载...",
    "cmd_no_default": "❌ 软件包 '{package_name}' 没有默认命令 ('__default__' 或 'default')。",
    "cmd_subcommand_not_found_default": "未找到子命令 '{sub_command}'。正在运行默认命令:",
    "cmd_subcommand_not_found_no_default": "❌ 软件包 '{package_name}' 没有子命令 '{sub_command}' 或默认命令。",
    "cmd_running": "🔹 正在运行 '{package_name} {display_subcommand}'...",
    "cmd_multiline_fallback": "   (信息: 检测到多行字符串，正在尝试后备方案...)",
    "cmd_error_fallback": "执行 (后备方案) 出错: {e}",
    "cmd_error_syntax": "执行命令时出错 (SyntaxError): {e}",
    "cmd_error_generic": "执行命令时出错: {e}",
    "cmd_not_found": "❌ 在已安装的软件包中未找到命令 '{package_name}'。"
}
